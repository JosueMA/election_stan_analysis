male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv_for_spar.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv_for_spar.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/b_fold_cv.R')
load('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/Final-2.RData');
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender == 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
female_age <- data$age[data$gender == 'female'];
female_spnbmd <- data$spnbmd[data$gender == 'female'];
female_opt_spar <- smoothing_spline_cv(female_age, female_spnbmd, 5, 'Age', 'Bone Density', 'Female Age v. Bone Density');
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv_for_spar.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/b_fold_cv.R')
load('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/Final-2.RData');
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender == 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv_for_spar.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/b_fold_cv.R')
load('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/Final-2.RData');
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender == 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv_for_spar.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/b_fold_cv.R')
load('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/Final-2.RData');
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender == 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
female_age[45.2]
female_age[45]
female_age[45.6]
female_age[45]
female_age[45.8]
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv_for_spar.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/b_fold_cv.R')
load('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/Final-2.RData');
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender == 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv_for_spar.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/b_fold_cv.R')
load('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/Final-2.RData');
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender == 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender == 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender == 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv_for_spar.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/b_fold_cv.R')
load('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/Final-2.RData');
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender == 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
female_age <- data$age[data$gender == 'female'];
female_spnbmd <- data$spnbmd[data$gender == 'female'];
female_opt_spar <- smoothing_spline_cv(female_age, female_spnbmd, 5, 'Age', 'Bone Density', 'Female Age v. Bone Density');
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv_for_spar.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/b_fold_cv.R')
load('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/Final-2.RData');
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender == 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
source('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/mc_perm_test.R');
mcperm_test(treatment_data, control_data, 4000);
source('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/mc_perm_test.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/mc_perm_test.R');
mc_perm_test(treatment_data, control_data, 4000);
mc_perm_test(control_data, treatment_data, 4000);
mean(treatment_data)
mean(control_data)
mc_perm_test(treatment_data, control_data, 4000);
source('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/mc_perm_test.R');
mc_perm_test(treatment_data, control_data, 4000);
source('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/mc_perm_test.R');
mc_perm_test(treatment_data, control_data, 4000);
plot(treatment_data, 'p')
help('plot')
plot('treatment_data', h)
plot('treatment_data', 'h')
source('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/mc_perm_test.R');
mc_perm_test(treatment_data, control_data, 4000);
source('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/mc_perm_test.R');
mc_perm_test(control_data, treatment_data, 4000);
help('runif')
max(c(1,2,3))
list_of_ki <- rep(0, 2000);
for (i in 1:2000)
{
test_stat <- runif(3, 0, 1);
if (max(abs(test_stat - (rank(test_stat) - 1)/n)) <= 0.4)
{
list_of_ki[i] = 1;
}
}
sum(list_of_ki)/length(list_of_ki)
list_of_ki <- rep(0, 2000);
for (i in 1:2000)
{
test_stat <- runif(3, 0, 1);
if (max(abs(test_stat - (rank(test_stat) - 1)/3)) <= 0.4)
{
list_of_ki[i] = 1;
}
}
sum(list_of_ki)/length(list_of_ki)
qnorm(0.05,0, 0.6705 * (1 - 0.6705)) * (2000)^.5
qnorm(0.05,0, 0.6705 * (1 - 0.6705))
qnorm(0.05,0, 0.6705 * (1 - 0.6705)) / (2000)^.5
0.6705 + qnorm(0.05,0, 0.6705 * (1 - 0.6705)) / (2000)^.5
0.6705 - qnorm(0.05,0, 0.6705 * (1 - 0.6705)) / (2000)^.5
qnorm(0.05,0, (0.6705 * (1 - 0.6705))^.5)
0.6705 + qnorm(0.05,0, (0.6705 * (1 - 0.6705))^.5) / (2000)^.5
0.6705 - qnorm(0.05,0, (0.6705 * (1 - 0.6705))^.5) / (2000)^.5
rank(c(1,2,3))
rank(c(2,3,4))
16/(20 * 19)
list_of_ki <- rep(0, 2000);
for (i in 1:2000)
{
test_stat <- runif(3, 0, 1);
if (max(abs(test_stat - (rank(test_stat) - 1)/3)) <= 0.4 && max(abs(test_stat - (rank(test_stat))/3)) <= 0.4)
{
list_of_ki[i] = 1;
}
}
sum(list_of_ki)/length(list_of_ki)
list_of_ki <- rep(0, 2000);
for (i in 1:2000)
{
test_stat <- runif(3, 0, 1);
if (max(abs(test_stat - (rank(test_stat) - 1)/3)) <= 0.4 && max(abs(test_stat - (rank(test_stat))/3)) <= 0.4)
{
list_of_ki[i] = 1;
}
}
sum(list_of_ki)/length(list_of_ki)
qnorm(0.05, 0, (0.4 * 0.6)^.5)
a <- qnorm(0.05, 0, (0.4 * 0.6)^.5)
0.4 + 1/(2000^.5) * a
0.4 - 1/(2000^.5) * a
3.5459 * 22 + 19 * 3.79 + 23 * 3.5206 + 17.5 * 3.6044 + 19 * 3.5257 + 16 * 3.8223 + 18 * 3.8223 + 16 * 3.9746 / (150.5)
(3.5459 * 22 + 19 * 3.79 + 23 * 3.5206 + 17.5 * 3.6044 + 19 * 3.5257 + 16 * 3.8223 + 18 * 3.8223 + 16 * 3.9746) / (150.5)
(3.5459 * 22 + 19 * 3.79 + 23 * 3.5206 + 17.5 * 3.6044 + 19 * 3.5257 + 16 * 3.8223 + 18 * 3.8223) / (150.5)
(3.5459 * 22 + 19 * 3.79 + 23 * 3.5206 + 17.5 * 3.6044 + 19 * 3.5257 + 16 * 3.8223 + 18 * 3.8223) / (134.5)
runif(10,-10,10)
length(unique(runif(100,-10,10)))
a <- c(1:10)
split(a)
split(a, 5)
split(a, 2)
split(a, cut.by)
split(a)
split(a, cut)
cut(a)
?cut
cut(a, c(1:5))
sample(a, 5)
a <- split(c(1:5), c(1:2))
a
sapply(a, function(i) {i + 2})
sapply(a, function(i) {i})
matrix(1,nrow=5)
?which.min
a <- (1,2,3)
a <- c(1,2,3)
a <- c(1,2,3,4,5)
split(a)
split(a,2)
split(a,c(1,2))
split(a,1
split(a,1)
split(a,1)
split(1:10,1:2)
a <- split(1:10,1:3)
a
a[[1]]
a$1
a$'1'
b <- c(1,2,3)
b['2']
b[2]
b[-2]
b <- matrix(1,nrow=2,ncol=2)
b
b[1,]
b[-1,]
b[-1,]=2
b
b[-1]
b[-1,]
sapply(a, sum)
sapply(a, sum, simplify = T)
sapply(a, sum, simplify = f)
sapply(a, sum, simplify = FALSE)
sapply(a, sum, simplify = TRUE)
mean(sapply(a, sum))
mean(sapply(a, function(x) (1+x)^2)
)
mean(sapply(a, function(x) {(1+x)^2}))
? sapply
sapply(a, function(x) x^2)
sapply(a, function(x) {x^2})
sapply(a, x^2)
sapply(a, function(x) {x^2})
library(rstan)
Sys.setenv(MAKEFLAGS = "-j4")
source('http://mc-stan.org/rstan/install.R', echo = TRUE, max.deparse.length = 2000)
install_rstan()
tmp <- installed.packages()
installedpkgs <- as.vector(tmp[is.na(tmp[,"Priority"]), 1])
save(installedpkgs, file="installed_old.rda")
library(devtools)
install_github("rtrangucci/stanRegression")
library(stanRegression)
#Get data 1
dir1 = "~/Documents/Gelman Research/Replication/Original Research/"
file1 = "MRP-201207152.RData"
setwd(dir1)
load(file1)
orig_M.cps <- M.cps
orig_M.vot <- M.vot
#Get subsequent data
dir2 = "~/Documents/Gelman Research/Replication/Original Research Round/"
file2 = "MRP-20120715.RData"
setwd(dir2)
load(file2)
new_M.cps <- M.cps
new_M.vot <- M.vot
setwd("../Subsequent Research/Stan/")
cps_rstan <- read_stan_csv(csvfiles = c('output.csv','output2.csv','output3.csv','output4.csv'))
library(rstan)
cps_rstan <- read_stan_csv(csvfiles = c('output.csv','output2.csv','output3.csv','output4.csv'))
summary(cps_rstan)$rstan
head(summary(cps_rstan)$summary)
coef(new_M.cps[[1]])$age
summary(cps_rstan)$summary[,20]
summary(cps_rstan)$summary[20,]
rownames(summary(cps_rstan)$summary)[20]
rownames(summary(cps_rstan)$summary)[15]
rownames(summary(cps_rstan)$summary)[25]
rownames(summary(cps_rstan)$summary)[50]
rownames(summary(cps_rstan)$summary)[100]
rownames(summary(cps_rstan)$summary)[200]
rownames(summary(cps_rstan)$summary)[150]
rownames(summary(cps_rstan)$summary)[125]
rownames(summary(cps_rstan)$summary)[rownames(summary(cps_rstan)$summary) == m_z_stt_z_inc_std]
rownames(summary(cps_rstan)$summary)[rownames(summary(cps_rstan)$summary) == 'm_z_stt_z_inc_std']
rownames(summary(cps_rstan)$summary)[grep('m_z_stt_z_inc_std', rownames(summary(cps_rstan)$summary))]
grep('m_z_stt_z_inc_std', rownames(summary(cps_rstan)$summary))
grep('m_z_age_z_inc_std', rownames(summary(cps_rstan)$summary))
rownames(summary(cps_rstan)$summary)[grep('m_z_age_z_inc_std', rownames(summary(cps_rstan)$summary))]
summary(cps_rstan)$summary[grep('m_z_age_z_inc_std', rownames(summary(cps_rstan)$summary)),1]
coef(new_M.cps[[1]])$age
ranef(new_M.cps[[1]])
head(ranef(new_M.cps[[1]]))
library(lme4)
head(ranef(new_M.cps[[1]]))
ranef(new_M.cps[[1]])
coef(new_M.cps[[1]])$age
fixef(new_M.cps[[1]])$age
fixef(new_M.cps[[1]])
names(ranef(new_M.cps[[1]]))
beta(new_M.cps[[1]])
rownames(summary(cps_rstan)$summary)[grep('Intercept', rownames(summary(cps_rstan)$summary))]
head(summary(cps_rstan)$summary[grep('m_z_age_z_inc_std', rownames(summary(cps_rstan)$summary)),1])
grep('Intercept', rownames(summary(cps_rstan)$summary))
rownames(summary(cps_rstan)$summary)[1]
fixef(new_M.cps[[1]])
summary(cps_rstan)$summary[1:6,]
plot(ranef(cps_rstan)$age)
plot(ranef(new_M.cps[[1]])$age)
plot()
plot(1)
names(ranef(new_M.cps[[1]]))
rownames(summary(cps_rstan)$summary)[grep('b_z', rownames(summary(cps_rstan)$summary))]
rownames(summary(cps_rstan)$summary)[grep('b_', rownames(summary(cps_rstan)$summary))]
?sapply
which(rownames(summary(cps_rstan)$summary) == 'Intercept')
get_fixed_effects_from_stanfit_list <- function(stanfit_list)
{
names_list <- rownames(summary(stanfit_list[[1]])$summary)
fixed_effects_index <- c(which(names_list == 'Intercept'), grep('b_', names_list))
lapply(stanfit_list, function(stanfit_obj) {summary(stanfit_obj)$summary[fixed_effects_index]})
}
stanfit_list <- list(cps_rstan)
get_fixed_effects_from_stanfit_list(stanfit_list)
head(summary(cps_rstan)$summary)
get_fixed_effects_from_stanfit_list <- function(stanfit_list)
{
names_list <- rownames(summary(stanfit_list[[1]])$summary)
fixed_effects_index <- c(which(names_list == 'Intercept'), grep('b_', names_list))
lapply(stanfit_list, function(stanfit_obj) {summary(stanfit_obj)$summary[fixed_effects_index,1]})
}
get_fixed_effects_from_stanfit_list(stanfit_list)
get_fixed_effects_from_stanfit_list <- function(stanfit_list)
{
names_list <- rownames(summary(stanfit_list[[1]])$summary)
fixed_effects_index <- c(which(names_list == 'Intercept'), grep('b_', names_list))
lapply(stanfit_list, get_fixed_effects_from_stanfit)
}
get_fixed_effects_from_stanfit <- function(stanfit_obj)
{
names_list <- rownames(stanfit_obj)
fixed_effects_index <- c(which(names_list == 'Intercept'), grep('b_', names_list))
return(summary(stanfit_obj)$summary[fixed_effects_index,1])
}
get_fixed_effects_from_stanfit_list(stanfit_list)
lapply(stanfit_list, get_fixed_effects_from_stanfit)
get_fixed_effects_from_stanfit(cps_rstan)
get_fixed_effects_from_stanfit <- function(stanfit_obj)
{
names_list <- rownames(stanfit_obj)
fixed_effects_index <- c(which(names_list == 'Intercept'), grep('b_', names_list))
return(summary(stanfit_obj)$summary[fixed_effects_index])
}
get_fixed_effects_from_stanfit(cps_rstan)
get_fixed_effects_from_stanfit <- function(stanfit_obj)
{
names_list <- rownames(stanfit_obj)
fixed_effects_index <- c(which(names_list == 'Intercept'), grep('b_', names_list))
summary(stanfit_obj)$summary[fixed_effects_index]
}
get_fixed_effects_from_stanfit(cps_rstan)
get_fixed_effects_from_stanfit <- function(stanfit_obj)
{
names_list <- rownames(summary(stanfit_obj)$summary)
fixed_effects_index <- c(which(names_list == 'Intercept'), grep('b_', names_list))
return(summary(stanfit_obj)$summary[fixed_effects_index])
}
get_fixed_effects_from_stanfit(cps_rstan)
?grep
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
#Get data 1
dir1 = "~/Documents/Gelman Research/Replication/Original Research/"
file1 = "MRP-201207152.RData"
setwd(dir1)
load(file1)
orig_M.cps <- M.cps
orig_M.vot <- M.vot
#Get subsequent data
dir2 = "~/Documents/Gelman Research/Replication/Original Research Round/"
file2 = "MRP-20120715.RData"
setwd(dir2)
load(file2)
new_M.cps <- M.cps
new_M.vot <- M.vot
#Get stan model
stan_dir = "~/Documents/Gelman Research/Replication/Subsequent Research/Stan/"
library(rstan)
cps_rstan <- read_stan_csv(csvfiles = c('output.csv','output2.csv','output3.csv','output4.csv'))
#Generate plot data for comparison
source("~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R")
pointstyle_list <- c(1, 2, 3)
colstyle_list <- c("blue", "red", "yellow")
merMod_2004_list <- list(orig_M.cps[[1]], new_M.cps[[1]])
stanlist <- list(cps_rstan)
setwd(stan_dir)
library(rstan)
cps_rstan <- read_stan_csv(csvfiles = c('output.csv','output2.csv','output3.csv','output4.csv'))
stanlist <- list(cps_rstan)
#Generate plot for comparison between original and new
outputDir="~/Documents/Gelman Research/Replication/Subsequent Research/Boxplot Compare/Original v stan/"
setwd(outputDir)
merMod_2004_list <- list(orig_M.cps[[1]], new_M.cps[[1]])
stanlist <- list(cps_rstan)
plot_fixed_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
colstyle_list <- c("blue", "red", "green")
plot_fixed_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
b <- matrix(1, nrow = 2, ncol = 2)
b
as.vector(b)
source("~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R")
plot_fixed_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
plot_rand_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
plot_rand_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
plot_rand_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
warnings()
names_list <- names(ranef(merMod_list[[1]]))
names_list <- names(ranef(mmerMod_2004_list[[1]]))
names_list <- names(ranef(merMod_2004_list[[1]]))
names_list
plot_rand_effects_for_var(age, merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
var_name = "age"
merMod_rand_eff_list <- lapply(merMod_2004_list, function(merMod_obj) {ranef(merMod_obj)[[var_name]]})
merMod_rand_eff_list
merMod_info <- get_eff_info(merMod_rand_eff_list)
stanfit_rand_eff_list <- lapply(stanfit_list, function(stanfit_obj) {get_rand_effects_from_stanfit(stanfit_obj, var_name)})
stanfit_rand_eff_list
grep("age_Intercept", rownames(summary(stanfit_obj)$summary))
grep("age_Intercept", rownames(summary(cps_rstan)$summary))
grep("reg_X_inc_Intercept", rownames(summary(cps_rstan)$summary))
rownames(summary(cps_rstan)$summary[186:211,1]
)
summary(cps_rstan)$summary[186:211,1]
summary(cps_rstan)$summary[186:211,]
summary(cps_rstan)$summary[7573:7597,1]
summary(cps_rstan)$summary[186:211,1]
ranef(new_M.cps[[1]])$reg.inc
grep("reg_X_inc_Intercept$", rownames(summary(cps_rstan)$summary, value = T))
grep("reg_X_inc_Intercept$", rownames(summary(cps_rstan)$summary))
grep("reg_X_inc_Intercept$", rownames(summary(cps_rstan)$summary), perl = T)
grep("*reg_X_inc_Intercept$", rownames(summary(cps_rstan)$summary), perl = T)
grep(".+reg_X_inc_Intercept$", rownames(summary(cps_rstan)$summary), perl = T)
grep(".*reg_X_inc_Intercept$", rownames(summary(cps_rstan)$summary), perl = T)
grep("reg_X_inc_Intercept", rownames(summary(cps_rstan)$summary), perl = T)
grep("reg_X_inc_Intercept\$", rownames(summary(cps_rstan)$summary), perl = T)
grep("reg_X_inc_Intercept$", rownames(summary(cps_rstan)$summary), perl = T)
grep("reg_X_inc_Intercept[\d*]", rownames(summary(cps_rstan)$summary), perl = T)
grep("reg_X_inc_Intercept[{1-9}*]", rownames(summary(cps_rstan)$summary), perl = T)
grep("reg_X_inc_Intercept[", rownames(summary(cps_rstan)$summary), perl = T)
grep("reg_X_inc_Intercept\[", rownames(summary(cps_rstan)$summary), perl = T)
grep("reg_X_inc_Intercept.", rownames(summary(cps_rstan)$summary), perl = T)
grep("reg_X_inc_Intercept.\d", rownames(summary(cps_rstan)$summary), perl = T)
grep("reg_X_inc_Intercept\\d", rownames(summary(cps_rstan)$summary), perl = T)
grep("reg_X_inc_Intercept.\\d", rownames(summary(cps_rstan)$summary), perl = T)
grep("reg_X_inc_Intercept\\[", rownames(summary(cps_rstan)$summary), perl = T)
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
plot_rand_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
warnings()
grep("stt_X_inc_X_age_Intercept\\[", rownames(summary(cps_rstan)$summary), perl = T)
names_list
sapply(names_list, function(var_name) {var_name})
translate_var_name("stt.inc.age")
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
translate_var_name("stt.inc.age")
plot_rand_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
warnings()
merMod_rand_eff_list
merMod_info <- get_eff_info(merMod_rand_eff_list)
max_merMod <- merMod_info$max
min_merMod <- merMod_info$min
num_merMod <- merMod_info$n
stanfit_info <- get_eff_info(stanfit_rand_eff_list)
max_stanfit <- stanfit_info$max
min_stanfit <- stanfit_info$min
num_stanfit <- stanfit_info$n
#Get min and max for plot settings
max_val <- max(max_merMod, max_stanfit)
min_val <- min(min_merMod, min_stanfit)
plot_name <- paste(var_name, "Random Effects", sep = " ")
plot(as.vector(merMod_rand_eff_list[[1]]), type = "p", main = plot_name, xlab = "", ylab = "Random effects", axes = F, pch = point_list[1], col = color_list[1], ylim=c(min_val, max_val))
axis(2)
plot(as.vector(merMod_rand_eff_list[[1]]), type = "p", main = plot_name, xlab = "", ylab = "Random effects", axes = F, pch = pointstyle_list[1], col = colstyle_list[1], ylim=c(min_val, max_val))
axis(2)
sapply(2:num_merMod, function(i) {points(as.vector(merMod_rand_eff_list[[i]]), pch = point_list[i], col = color_list[i])})
sapply(2:num_merMod, function(i) {points(as.vector(merMod_rand_eff_list[[i]]), pch = pointstyle_list[i], col = colstyle_list[i])})
sapply(1:num_stanfit, function(i) {points(stanfit_rand_eff_list[[i]], pch = pointstyle_list[i + num_merMod], col = colstyle_list[i + num_merMod])})
stanfit_rand_eff_list
stanfit_rand_eff_list <- lapply(stanfit_list, function(stanfit_obj) {get_rand_effects_from_stanfit(stanfit_obj, var_name)})
stanfit_rand_eff_list
var_name
rl_test <- get_rand_effects_from_stanfit(cps_rstan, "stt.inc.age")
rl_test
translate_var_name("stt.inc.age")
names_list <- rownames(summary(cps_rstan)$summary)
names_list
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
rl_test <- get_rand_effects_from_stanfit(cps_rstan, "stt.inc.age")
rl_test
rand_effects_index <- grep(stanfit_name, names_list, perl = T)
rl_test_nametranslate_var_name("stt.inc.age")
rl_test_name <- translate_var_name("stt.inc.age")
rand_effects_index <- grep(rl_test_name, names_list, perl = T)
rand_effects_index
names_list[rand_effects_index]
rl_test <- get_rand_effects_from_stanfit(cps_rstan, "age")
rl_test
rl_test_name <- translate_var_name("age")
rand_effects_index <- grep(rl_test_name, names_list, perl = T)
rl_test_name <- translate_var_name("age")
names_list[rand_effects_index]
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
rl_test_name <- translate_var_name("age")
rl_test_name
rand_effects_index <- grep(rl_test_name, names_list, perl = T)
rand_effects_index
rl_test <- get_rand_effects_from_stanfit(cps_rstan, "age")
rl_test
stanfit_name <- paste("age", "z", "inc", sep = "_")
rand_effects_index <- grep(stanfit_name, names_list)
rand_effects_index
names_list[rand_effects_index]
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
rl_test <- get_rand_effects_from_stanfit(cps_rstan, "age")
rl_test
plot_rand_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
warnings()
plot_rand_effects_for_var("age", merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
stanlist
head(stanlist)
stanlist <- list(cps_rstan)
plot_rand_effects_for_var("age", merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
plot_rand_effects_for_var("age", merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
rl_test <- get_rand_effects_from_stanfit(cps_rstan, "age")
