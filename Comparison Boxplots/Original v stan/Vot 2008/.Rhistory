59400/(59400 + 2999400)
59.4/(3*10^8 - 60)
hw_array <- c(37,49,57, 23, 46)
combn(hw_array, 3)
help('sample')
install.packages("exactRankTests")
library('exactRankTests')
treatment_data <- c(85, 89, 86, 91, 77, 93, 100, 82, 92, 86, 86);
control_data <- c(83, 73, 65, 65, 90, 77, 78, 97, 85, 75);
help('wilcox.exact')
wilcox.exact(treatment_data, control_data)
test <- c(1, 1, 2)
rank(test)
rank(test, ties.method = "max")
rank(test, ties.method = "min")
test <- c(1,2, 1)
rank(test, ties.method = "min")
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 8/Code/mc_perm_test.R')
mc_perm_test(treatment_data, control_data, 500);
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 8/Code/mc_perm_test.R')
mc_perm_test(treatment_data, control_data, 500);
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 8/Code/mc_perm_test.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 8/Code/calc_d.R')
mc_perm_test(treatment_data, control_data, 500);
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 8/Code/mc_perm_test.R')
mc_perm_test(treatment_data, control_data, 500);
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 8/Code/mc_perm_test.R')
mc_perm_test(treatment_data, control_data, 500);
mc_perm_test(treatment_data, control_data, 500);
mc_perm_test(treatment_data, control_data, 500);
mc_perm_test(treatment_data, control_data, 500);
mc_perm_test(treatment_data, control_data, 500);
mc_perm_test(treatment_data, control_data, 500);
mc_perm_test(treatment_data, control_data, 500);
mc_perm_test(treatment_data, control_data, 500);
mc_perm_test(treatment_data, control_data, 500);
mc_perm_test(treatment_data, control_data, 500);
mc_perm_test(treatment_data, control_data, 500);
rank(c(1,2,3,4))[2:4]
mc_perm_test(treatment_data, control_data, 500);
wilcox.exact(treatment_data, control_data)
mc_perm_test(treatment_data, control_data, 500);
mc_perm_test(treatment_data, control_data, 500);
mc_perm_test(treatment_data, control_data, 1000);
mc_perm_test(treatment_data, control_data, 1500);
mc_perm_test(treatment_data, control_data, 2000);
.99 * 70
2999999.3 + 69.3
69.3 / (2999999.3 + 69.3)
299999930/(299999930 + 35)
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv_for_spar.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/b_fold_cv.R')
two_data <- load('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/Final-2.RData')
two_data
two_data$male
data$male
data
data$age[data$gender == 'male']
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv.R')
unlist(data$age[data$gender == 'male'])
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender = 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv.R')
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender = 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender == 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
female_age <- data$age[data$gender == 'female'];
female_spnbmd <- data$spnbmd[data$gender == 'female'];
female_opt_spar <- smoothing_spline_cv(female_age, female_spnbmd, 5, 'Age', 'Bone Density', 'Female Age v. Bone Density');
optimal_ss <- smooth.spline(female_age, female_spnbmd, spar = female_opt_spar);
optimal_ss$x[which.min(abs(optimal_ss$y - 0.06))]
optimal_male_ss <- smooth.spline(male_age, male_spnbmd, spar = male_opt_spar);
optimal_male_ss$x[which.max(optimal_male_ss$y)]
optimal_female_ss <- smooth.spline(female_age, female_spnbmd, spar = female_opt_spar);
optimal_female_ss$x[which.max(optimal_female_ss$y)]
library(nortest)
treatment_data <- c(94, 197, 16, 38, 99, 141, 23, 102, 72, 200, 11);
control_data <- c(52, 104, 146, 10, 51, 30, 40, 27, 46, 154, 12, 7);
library(nortest);
lillie.test(treatment_data);
lillie.test(control_data);
mean(treatment_data)
mean(control_data)
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv_for_spar.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv_for_spar.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/b_fold_cv.R')
load('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/Final-2.RData');
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender == 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv_for_spar.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv_for_spar.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/b_fold_cv.R')
load('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/Final-2.RData');
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender == 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
female_age <- data$age[data$gender == 'female'];
female_spnbmd <- data$spnbmd[data$gender == 'female'];
female_opt_spar <- smoothing_spline_cv(female_age, female_spnbmd, 5, 'Age', 'Bone Density', 'Female Age v. Bone Density');
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv_for_spar.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/b_fold_cv.R')
load('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/Final-2.RData');
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender == 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv_for_spar.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/b_fold_cv.R')
load('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/Final-2.RData');
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender == 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv_for_spar.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/b_fold_cv.R')
load('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/Final-2.RData');
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender == 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
female_age[45.2]
female_age[45]
female_age[45.6]
female_age[45]
female_age[45.8]
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv_for_spar.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/b_fold_cv.R')
load('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/Final-2.RData');
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender == 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv_for_spar.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/b_fold_cv.R')
load('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/Final-2.RData');
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender == 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender == 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender == 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv_for_spar.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/b_fold_cv.R')
load('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/Final-2.RData');
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender == 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
female_age <- data$age[data$gender == 'female'];
female_spnbmd <- data$spnbmd[data$gender == 'female'];
female_opt_spar <- smoothing_spline_cv(female_age, female_spnbmd, 5, 'Age', 'Bone Density', 'Female Age v. Bone Density');
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/smoothing_spline_cv_for_spar.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Hw 7/Code/b_fold_cv.R')
load('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/Final-2.RData');
male_age <- data$age[data$gender == 'male'];
male_spnbmd <- data$spnbmd[data$gender == 'male'];
male_opt_spar <- smoothing_spline_cv(male_age, male_spnbmd, 5, 'Age', 'Bone Density', 'Male Age v. Bone Density');
source('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/mc_perm_test.R');
mcperm_test(treatment_data, control_data, 4000);
source('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/mc_perm_test.R')
source('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/mc_perm_test.R');
mc_perm_test(treatment_data, control_data, 4000);
mc_perm_test(control_data, treatment_data, 4000);
mean(treatment_data)
mean(control_data)
mc_perm_test(treatment_data, control_data, 4000);
source('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/mc_perm_test.R');
mc_perm_test(treatment_data, control_data, 4000);
source('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/mc_perm_test.R');
mc_perm_test(treatment_data, control_data, 4000);
plot(treatment_data, 'p')
help('plot')
plot('treatment_data', h)
plot('treatment_data', 'h')
source('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/mc_perm_test.R');
mc_perm_test(treatment_data, control_data, 4000);
source('~/Documents/Columbia University/Nonparametric Statistics/Prefinal Midterm/Code/mc_perm_test.R');
mc_perm_test(control_data, treatment_data, 4000);
help('runif')
max(c(1,2,3))
list_of_ki <- rep(0, 2000);
for (i in 1:2000)
{
test_stat <- runif(3, 0, 1);
if (max(abs(test_stat - (rank(test_stat) - 1)/n)) <= 0.4)
{
list_of_ki[i] = 1;
}
}
sum(list_of_ki)/length(list_of_ki)
list_of_ki <- rep(0, 2000);
for (i in 1:2000)
{
test_stat <- runif(3, 0, 1);
if (max(abs(test_stat - (rank(test_stat) - 1)/3)) <= 0.4)
{
list_of_ki[i] = 1;
}
}
sum(list_of_ki)/length(list_of_ki)
qnorm(0.05,0, 0.6705 * (1 - 0.6705)) * (2000)^.5
qnorm(0.05,0, 0.6705 * (1 - 0.6705))
qnorm(0.05,0, 0.6705 * (1 - 0.6705)) / (2000)^.5
0.6705 + qnorm(0.05,0, 0.6705 * (1 - 0.6705)) / (2000)^.5
0.6705 - qnorm(0.05,0, 0.6705 * (1 - 0.6705)) / (2000)^.5
qnorm(0.05,0, (0.6705 * (1 - 0.6705))^.5)
0.6705 + qnorm(0.05,0, (0.6705 * (1 - 0.6705))^.5) / (2000)^.5
0.6705 - qnorm(0.05,0, (0.6705 * (1 - 0.6705))^.5) / (2000)^.5
rank(c(1,2,3))
rank(c(2,3,4))
16/(20 * 19)
list_of_ki <- rep(0, 2000);
for (i in 1:2000)
{
test_stat <- runif(3, 0, 1);
if (max(abs(test_stat - (rank(test_stat) - 1)/3)) <= 0.4 && max(abs(test_stat - (rank(test_stat))/3)) <= 0.4)
{
list_of_ki[i] = 1;
}
}
sum(list_of_ki)/length(list_of_ki)
list_of_ki <- rep(0, 2000);
for (i in 1:2000)
{
test_stat <- runif(3, 0, 1);
if (max(abs(test_stat - (rank(test_stat) - 1)/3)) <= 0.4 && max(abs(test_stat - (rank(test_stat))/3)) <= 0.4)
{
list_of_ki[i] = 1;
}
}
sum(list_of_ki)/length(list_of_ki)
qnorm(0.05, 0, (0.4 * 0.6)^.5)
a <- qnorm(0.05, 0, (0.4 * 0.6)^.5)
0.4 + 1/(2000^.5) * a
0.4 - 1/(2000^.5) * a
3.5459 * 22 + 19 * 3.79 + 23 * 3.5206 + 17.5 * 3.6044 + 19 * 3.5257 + 16 * 3.8223 + 18 * 3.8223 + 16 * 3.9746 / (150.5)
(3.5459 * 22 + 19 * 3.79 + 23 * 3.5206 + 17.5 * 3.6044 + 19 * 3.5257 + 16 * 3.8223 + 18 * 3.8223 + 16 * 3.9746) / (150.5)
(3.5459 * 22 + 19 * 3.79 + 23 * 3.5206 + 17.5 * 3.6044 + 19 * 3.5257 + 16 * 3.8223 + 18 * 3.8223) / (150.5)
(3.5459 * 22 + 19 * 3.79 + 23 * 3.5206 + 17.5 * 3.6044 + 19 * 3.5257 + 16 * 3.8223 + 18 * 3.8223) / (134.5)
runif(10,-10,10)
length(unique(runif(100,-10,10)))
a <- c(1:10)
split(a)
split(a, 5)
split(a, 2)
split(a, cut.by)
split(a)
split(a, cut)
cut(a)
?cut
cut(a, c(1:5))
sample(a, 5)
a <- split(c(1:5), c(1:2))
a
sapply(a, function(i) {i + 2})
sapply(a, function(i) {i})
matrix(1,nrow=5)
?which.min
a <- (1,2,3)
a <- c(1,2,3)
a <- c(1,2,3,4,5)
split(a)
split(a,2)
split(a,c(1,2))
split(a,1
split(a,1)
split(a,1)
split(1:10,1:2)
a <- split(1:10,1:3)
a
a[[1]]
a$1
a$'1'
b <- c(1,2,3)
b['2']
b[2]
b[-2]
b <- matrix(1,nrow=2,ncol=2)
b
b[1,]
b[-1,]
b[-1,]=2
b
b[-1]
b[-1,]
sapply(a, sum)
sapply(a, sum, simplify = T)
sapply(a, sum, simplify = f)
sapply(a, sum, simplify = FALSE)
sapply(a, sum, simplify = TRUE)
mean(sapply(a, sum))
mean(sapply(a, function(x) (1+x)^2)
)
mean(sapply(a, function(x) {(1+x)^2}))
? sapply
sapply(a, function(x) x^2)
sapply(a, function(x) {x^2})
sapply(a, x^2)
sapply(a, function(x) {x^2})
library(rstan)
Sys.setenv(MAKEFLAGS = "-j4")
source('http://mc-stan.org/rstan/install.R', echo = TRUE, max.deparse.length = 2000)
install_rstan()
tmp <- installed.packages()
installedpkgs <- as.vector(tmp[is.na(tmp[,"Priority"]), 1])
save(installedpkgs, file="installed_old.rda")
library(devtools)
install_github("rtrangucci/stanRegression")
library(stanRegression)
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/stan_lmer_voting_analysis.R')
rl_test <- build_formula(3)
rl_test
rl_test <- formula(rl_test)
terms(rl_test)
terms(rl_test)[,variables]
atrr(terms(rl_test),variables)
attr(terms(rl_test),variables)
attr(terms(rl_test), "variables"")
)
)
[,1]
opt
""
attr(terms(rl_test), "variables")
attr(terms(rl_test), "variables")[,1]
?eval
?formula
rl_test
terms(rl_test)
methods(class = "formula")
stripchart(formula)
var(formula)
var(rl_test)
model.frame.formula(rl_test)
model.frame(rl_test)
terms(rl_test, simplify = T)
rl_test <- formula("y ~ (a + b + c)^2")
terms(rl_test, simplify = T)
rl_test <- formula("y ~ a + b - 1")
terms(rl_test, simplify = T)
?attr
rl_test <- formula("y ~ a + b + b - 1")
terms(rl_test, simplify = T)
rl_test <- formula("y ~ (a + b) + b - 1")
terms(rl_test, simplify = T)
rl_test <- formula("y ~ a + b - 1")
terms(rl_test, simplify = T)
?formula
as.list(attr(terms(rl_test, simplify = T), "term.labels"))
attr(terms(rl_test, simplify = T), "term.labels")
lapply(as.list(attr(terms(rl_test, simplify = T), "term.labels")), function(i) {as.list(attr(terms(rl_test, simplify = T), "term.labels"))[[i]]})
lapply(as.list(attr(terms(rl_test, simplify = T), "term.labels")), function(term) {term})
list(attr(terms(rl_test, simplify = T), "term.labels"))
?as.list()
list(attr(terms(rl_test, simplify = T), "term.labels"), all.names = T)
?ifelse
a <- list("bob" = "mess")
a$bob
paste("a", "b", sep = "\n")
exists(bob, where = a)
exists("bob", where = a)
'exists("bob", where = a)
''
'
!exists("bob", where = a)
a$"next" <- "yes"
a
formula("y ~ a + (1 + b|c:d)")
rl_test <- formula("y ~ a + (1 + b|c:d)")
terms(rl_test, simplify = T)
library(rstan)
#Get data 1
dir1 = "~/Documents/Gelman Research/Replication/Original Research/"
file1 = "MRP-201207152.RData"
setwd(dir1)
load(file1)
orig_M.cps <- M.cps
orig_M.vot <- M.vot
#Get subsequent data
dir2 = "~/Documents/Gelman Research/Replication/Original Research Round/"
file2 = "MRP-20120715.RData"
setwd(dir2)
load(file2)
new_M.cps <- M.cps
new_M.vot <- M.vot
#Set up plot settings
source("~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R")
pointstyle_list <- c(1, 2, 3)
colstyle_list <- c("blue", "red", "green")
# #Generate plot for comparison between original
# output_dir="~/Documents/Gelman Research/Replication/Subsequent Research/Boxplot Compare/Original v round/Fixed and Random Plot/"
# years <- c(2004, 2008)
# models <- c("CPS", "Vot")
#
# for (i in 1:length(years))
# {
#   for (j in 1:length(models))
#   {
#     year = years[i]
#     model = models[j]
#     folder_name = paste(model, year, sep = " ")
#     output_folder = paste(output_dir, folder_name, sep = "")
#     setwd(output_folder)
#     if (j == 1)
#     {
#       compare_list <- list(orig_M.cps[[i]], new_M.cps[[i]])
#     }
#     else
#     {
#       compare_list <- list(orig_M.vot[[i]], new_M.vot[[i]])
#     }
#     plot_fixed_effects(compare_list, list(), colstyle_list, pointstyle_list)
#     plot_rand_effects(compare_list, list(), colstyle_list, pointstyle_list)
#   }
# }
#Generate plot for comparison between original
output_dir="~/Documents/Gelman Research/Replication/Subsequent Research/Boxplot Compare/Original v stan/"
stan_dir_template="~/Documents/Gelman Research/Replication/Subsequent Research/Stan/Level_3"
years <- c(2004, 2008)
models <- c("CPS", "Vot")
for (i in 1:length(years))
{
for (j in 1:length(models))
{
year = years[i]
model = models[j]
stan_data_dir <- paste(stan_dir_template, year, model, sep = "_")
setwd(stan_data_dir)
cps_rstan <- read_stan_csv(csvfiles = c('output.csv','output2.csv','output3.csv','output4.csv'))
stan_list <- list(cps_rstan)
if (j == 1)
{
compare_list <- list(orig_M.cps[[i]], new_M.cps[[i]])
}
else
{
compare_list <- list(orig_M.vot[[i]], new_M.vot[[i]])
}
#Set output directory
folder_name = paste(model, year, sep = " ")
output_folder = paste(output_dir, folder_name, sep = "")
setwd(output_folder)
plot_fixed_effects(compare_list, stan_list, colstyle_list, pointstyle_list)
plot_rand_effects(compare_list, stan_list, colstyle_list, pointstyle_list)
}
}
output_folder
setwd(output_folder)
getwd(0)
getwd()
#Generate plot for comparison between original
output_dir="~/Documents/Gelman Research/Replication/Subsequent Research/Boxplot Compare/Original v stan/"
stan_dir_template="~/Documents/Gelman Research/Replication/Subsequent Research/Stan/Level_3"
years <- c(2004, 2008)
models <- c("CPS", "Vot")
for (i in 1:length(years))
{
for (j in 1:length(models))
{
year = years[i]
model = models[j]
stan_data_dir <- paste(stan_dir_template, year, model, sep = "_")
setwd(stan_data_dir)
cps_rstan <- read_stan_csv(csvfiles = c('output.csv','output2.csv','output3.csv','output4.csv'))
stan_list <- list(cps_rstan)
if (j == 1)
{
compare_list <- list(orig_M.cps[[i]], new_M.cps[[i]])
}
else
{
compare_list <- list(orig_M.vot[[i]], new_M.vot[[i]])
}
#Set output directory
folder_name = paste(model, year, sep = " ")
output_folder = paste(output_dir, folder_name, sep = "")
setwd(output_folder)
plot_fixed_effects(compare_list, stan_list, colstyle_list, pointstyle_list)
plot_rand_effects(compare_list, stan_list, colstyle_list, pointstyle_list)
}
}
?grep
naes_online_data_filepath = "~/Documents/Gelman Research/Replication/Subsequent Research/naes08-online-all-waves-data-compact.txt"
naes_online_data_matrix <- read.table(naes_online_data_filepath, header = T, sep = "\t")
head(naes_online_data_matrix)
preference_index <- grep("RCa02", x = names(naes_online_data_matrix))
preference_index
naes_online_data_matrix[1:5, preference_index]
preference_index <- grep("WA05", x = names(naes_online_data_matrix))
preference_index
naes_online_data_matrix[1:5, preference_index]
sum(is.na(naes_online_data_matrix[, preference_index]))
naes_telephone_data_filepath = "~/Documents/Gelman Research/Replication/Subsequent Research/naes08-phone-nat-rcs-data-full.txt"
naes_telephone_data_matrix <- read.table(naes_telephone_data_matrix, header = T, sep = "\t")
naes_telephone_data_matrix <- read.table(naes_telephone_data_filepath, header = T, sep = "\t")
naes_telephone_data_matrix <- read.table(naes_telephone_data_filepath, header = T, sep = "\t")
naes_telephone_data_matrix <- read.table(naes_telephone_data_filepath, header = T, sep = "\t")
head(cat(readLines(naes_telephone_data_filepath)))
