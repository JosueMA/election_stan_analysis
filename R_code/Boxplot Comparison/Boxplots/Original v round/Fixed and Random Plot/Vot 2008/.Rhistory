a <- split(c(1:5), c(1:2))
a
sapply(a, function(i) {i + 2})
sapply(a, function(i) {i})
matrix(1,nrow=5)
?which.min
a <- (1,2,3)
a <- c(1,2,3)
a <- c(1,2,3,4,5)
split(a)
split(a,2)
split(a,c(1,2))
split(a,1
split(a,1)
split(a,1)
split(1:10,1:2)
a <- split(1:10,1:3)
a
a[[1]]
a$1
a$'1'
b <- c(1,2,3)
b['2']
b[2]
b[-2]
b <- matrix(1,nrow=2,ncol=2)
b
b[1,]
b[-1,]
b[-1,]=2
b
b[-1]
b[-1,]
sapply(a, sum)
sapply(a, sum, simplify = T)
sapply(a, sum, simplify = f)
sapply(a, sum, simplify = FALSE)
sapply(a, sum, simplify = TRUE)
mean(sapply(a, sum))
mean(sapply(a, function(x) (1+x)^2)
)
mean(sapply(a, function(x) {(1+x)^2}))
? sapply
sapply(a, function(x) x^2)
sapply(a, function(x) {x^2})
sapply(a, x^2)
sapply(a, function(x) {x^2})
library(rstan)
Sys.setenv(MAKEFLAGS = "-j4")
source('http://mc-stan.org/rstan/install.R', echo = TRUE, max.deparse.length = 2000)
install_rstan()
tmp <- installed.packages()
installedpkgs <- as.vector(tmp[is.na(tmp[,"Priority"]), 1])
save(installedpkgs, file="installed_old.rda")
library(devtools)
install_github("rtrangucci/stanRegression")
library(stanRegression)
#Get data 1
dir1 = "~/Documents/Gelman Research/Replication/Original Research/"
file1 = "MRP-201207152.RData"
setwd(dir1)
load(file1)
orig_M.cps <- M.cps
orig_M.vot <- M.vot
#Get subsequent data
dir2 = "~/Documents/Gelman Research/Replication/Original Research Round/"
file2 = "MRP-20120715.RData"
setwd(dir2)
load(file2)
new_M.cps <- M.cps
new_M.vot <- M.vot
#Get stan model
stan_dir = "~/Documents/Gelman Research/Replication/Subsequent Research/Stan/"
setwd(stan_dir)
library(rstan)
cps_rstan <- read_stan_csv(csvfiles = c('output.csv','output2.csv','output3.csv','output4.csv'))
#Set up plot settings
source("~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R")
pointstyle_list <- c(1, 2, 3)
colstyle_list <- c("blue", "red", "green")
#Generate plot for comparison between original and new
outputDir="~/Documents/Gelman Research/Replication/Subsequent Research/Boxplot Compare/Original v stan/"
setwd(outputDir)
merMod_2004_list <- list(orig_M.cps[[1]], new_M.cps[[1]])
stanlist <- list(cps_rstan)
plot_fixed_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
plot_rand_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
#Generate plot for comparison between original and new
outputDir="~/Documents/Gelman Research/Replication/Subsequent Research/Boxplot Compare/Original v stan/"
setwd(outputDir)
merMod_2004_list <- list(orig_M.cps[[1]], new_M.cps[[1]])
stanlist <- list(cps_rstan)
plot_fixed_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
plot_rand_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
var_name = "eth.age"
merMod_rand_eff_list <- lapply(merMod_list, function(merMod_obj) {ranef(merMod_obj)[[var_name]]})
merMod_rand_eff_list <- lapply(merMod_2004_list, function(merMod_obj) {ranef(merMod_obj)[[var_name]]})
merMod_rand_eff_list
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
plot_rand_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
as.vector(merMod_rand_eff_list[[1]])
max(matrix(1, nrow = 2, ncol = 2))
max(matrix(c(1,2,3,4), nrow = 2, ncol = 2))
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
stanfit_rand_eff_list <- lapply(stanfit_list, function(stanfit_obj) {get_rand_effects_from_stanfit(stanfit_obj, var_name)})
stanfit_rand_eff_list <- lapply(stanlist, function(stanfit_obj) {get_rand_effects_from_stanfit(stanfit_obj, var_name)})
stanfit_rand_eff_list
get_rand_effects_from_stanfit(cps_rstan, var_name)
stanfit_name <- translate_var_name(var_name)
stanfit_name
names_list <- rownames(summary(cps_rstan)$summary)
rand_effects_index <- grep(stanfit_name, names_list, perl = T)
rand_effects_index
grep(stanfit_name, names_list, perl = T)
grep("\\^\\._age_Intercept\\[", names_list, perl = T)
grep("\^\\._eth_X_age_Intercept\\[", names_list, perl = T)
grep("^\\._eth_X_age_Intercept\\[", names_list, perl = T)
grep("^\\._eth_X_age_Intercept[", names_list, perl = T)
grep("^._eth_X_age_Intercept\\[", names_list, perl = T)
grep("^._age_Intercept\\[", names_list, perl = T)
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
plot_rand_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
warnings()
var_name
rl_test <- get_rand_effects_from_stanfit(cps_rstan, var_name)
rl_test
get_eff_info(rl_test)
merMod_rand_eff_list <- lapply(merMod_list, function(merMod_obj) {ranef(merMod_obj)[[var_name]]})
merMod_rand_eff_list <- lapply(merMod_2004_list, function(merMod_obj) {ranef(merMod_obj)[[var_name]]})
merMod_rand_eff_list
merMod_info <- get_eff_info(merMod_rand_eff_list)
merMod_info
stanfit_rand_eff_list <- lapply(stanlist, function(stanfit_obj) {get_rand_effects_from_stanfit(stanfit_obj, var_name)})
stanfit_rand_eff_list
get_eff_info(stanfit_rand_eff_list)
plot(as.vector(merMod_rand_eff_list[[1]]), type = "p", main = plot_name, xlab = "", ylab = "Random effects", axes = F, pch = pointstyle_list[1], col = colstyle_list[1], ylim=c(-0.08562764,  0.1292787))
plot(as.vector(merMod_rand_eff_list[[1]]), type = "p", main = "eth.age Random Effects", xlab = "", ylab = "Random effects", axes = F, pch = pointstyle_list[1], col = colstyle_list[1], ylim=c(-0.08562764,  0.1292787))
plot(as.vector(merMod_rand_eff_list[[1]]), main = "eth.age Random Effects", xlab = "", ylab = "Random effects", axes = F, pch = pointstyle_list[1], col = colstyle_list[1], ylim=c(-0.08562764,  0.1292787))
merMod_rand_eff_list[[1]]
as.vector(merMod_rand_eff_list[[1]])
plot(unlist(merMod_rand_eff_list[[1]]), main = "eth.age Random Effects", xlab = "", ylab = "Random effects", axes = F, pch = pointstyle_list[1], col = colstyle_list[1], ylim=c(-0.08562764,  0.1292787))
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
plot_rand_effects_for_var("eth.age", merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
plot_rand_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
?sort
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
plot_fixed_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
plot_rand_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
plot_fixed_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
plot_rand_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
ranef(orig_M.cps[[1]])$eth.age
ranef(orig_M.cps[[1]])$reg.inc
head(summary(cps_rstan)$summary)
get_rand_effects_from_stanfit(cps_rstan, "reg.inc")
names_list <- rownames(summary(cps_rstan)$summary)
stanfit_name <- translate_var_name(var_name)
stanfit_name <- translate_var_name("reg.inc")
rand_effects_index <- grep(stanfit_name, names_list, perl = T)
stanfit_name[rand_effects_index]
names_list[rand_effects_index]
get_rand_effects_from_stanfit(cps_rstan, "reg")
rand_effects_index <- grep("reg_z_inc\\[", names_list)
names_list[rand_effects_index]
#Generate plot for comparison between original
outputDir="~/Documents/Gelman Research/Replication/Subsequent Research/Boxplot Compare/Original v round/Fixed and Random Plot/"
years <- c(2004, 2008)
models <- c("CPS", "Vot")
for (i in 1:length(years))
{
for (j in 1:length(models))
{
year = years[i]
model = models[j]
folder_name = paste(model, year, sep = " ")
output_folder = paste(output_dir, folder_name, sep = "")
setwd(output_folder)
if (j == 1)
{
compare_list <- list(orig_M.cps[[i]], new_M.cps[[i]])
}
else
{
compare_list <- list(orig_M.vot[[i]], new_M.vot[[i]])
}
plot_fixed_effects(compare_list, "", colstyle_list, pointstyle_list)
}
}
#Generate plot for comparison between original
output_dir="~/Documents/Gelman Research/Replication/Subsequent Research/Boxplot Compare/Original v round/Fixed and Random Plot/"
years <- c(2004, 2008)
models <- c("CPS", "Vot")
for (i in 1:length(years))
{
for (j in 1:length(models))
{
year = years[i]
model = models[j]
folder_name = paste(model, year, sep = " ")
output_folder = paste(output_dir, folder_name, sep = "")
setwd(output_folder)
if (j == 1)
{
compare_list <- list(orig_M.cps[[i]], new_M.cps[[i]])
}
else
{
compare_list <- list(orig_M.vot[[i]], new_M.vot[[i]])
}
plot_fixed_effects(compare_list, "", colstyle_list, pointstyle_list)
}
}
#Generate plot for comparison between original
output_dir="~/Documents/Gelman Research/Replication/Subsequent Research/Boxplot Compare/Original v round/Fixed and Random Plot/"
years <- c(2004, 2008)
models <- c("CPS", "Vot")
for (i in 1:length(years))
{
for (j in 1:length(models))
{
year = years[i]
model = models[j]
folder_name = paste(model, year, sep = " ")
output_folder = paste(output_dir, folder_name, sep = "")
setwd(output_folder)
if (j == 1)
{
compare_list <- list(orig_M.cps[[i]], new_M.cps[[i]])
}
else
{
compare_list <- list(orig_M.vot[[i]], new_M.vot[[i]])
}
plot_fixed_effects(compare_list, list(), colstyle_list, pointstyle_list)
}
}
is.na(list())
is.na(
)
is.na(list())
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
max_y <- max(max_merMod, max_stanfit)
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
max_stanfit
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
#Generate plot for comparison between original
output_dir="~/Documents/Gelman Research/Replication/Subsequent Research/Boxplot Compare/Original v round/Fixed and Random Plot/"
years <- c(2004, 2008)
models <- c("CPS", "Vot")
for (i in 1:length(years))
{
for (j in 1:length(models))
{
year = years[i]
model = models[j]
folder_name = paste(model, year, sep = " ")
output_folder = paste(output_dir, folder_name, sep = "")
setwd(output_folder)
if (j == 1)
{
compare_list <- list(orig_M.cps[[i]], new_M.cps[[i]])
}
else
{
compare_list <- list(orig_M.vot[[i]], new_M.vot[[i]])
}
plot_fixed_effects(compare_list, list(), colstyle_list, pointstyle_list)
}
}
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
#Generate plot for comparison between original
output_dir="~/Documents/Gelman Research/Replication/Subsequent Research/Boxplot Compare/Original v round/Fixed and Random Plot/"
years <- c(2004, 2008)
models <- c("CPS", "Vot")
for (i in 1:length(years))
{
for (j in 1:length(models))
{
year = years[i]
model = models[j]
folder_name = paste(model, year, sep = " ")
output_folder = paste(output_dir, folder_name, sep = "")
setwd(output_folder)
if (j == 1)
{
compare_list <- list(orig_M.cps[[i]], new_M.cps[[i]])
}
else
{
compare_list <- list(orig_M.vot[[i]], new_M.vot[[i]])
}
plot_fixed_effects(compare_list, list(), colstyle_list, pointstyle_list)
}
}
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
#Generate plot for comparison between original
output_dir="~/Documents/Gelman Research/Replication/Subsequent Research/Boxplot Compare/Original v round/Fixed and Random Plot/"
years <- c(2004, 2008)
models <- c("CPS", "Vot")
for (i in 1:length(years))
{
for (j in 1:length(models))
{
year = years[i]
model = models[j]
folder_name = paste(model, year, sep = " ")
output_folder = paste(output_dir, folder_name, sep = "")
setwd(output_folder)
if (j == 1)
{
compare_list <- list(orig_M.cps[[i]], new_M.cps[[i]])
}
else
{
compare_list <- list(orig_M.vot[[i]], new_M.vot[[i]])
}
plot_fixed_effects(compare_list, list(), colstyle_list, pointstyle_list)
}
}
#Generate plot for comparison between original
output_dir="~/Documents/Gelman Research/Replication/Subsequent Research/Boxplot Compare/Original v round/Fixed and Random Plot/"
years <- c(2004, 2008)
models <- c("CPS", "Vot")
for (i in 1:length(years))
{
for (j in 1:length(models))
{
year = years[i]
model = models[j]
folder_name = paste(model, year, sep = " ")
output_folder = paste(output_dir, folder_name, sep = "")
setwd(output_folder)
if (j == 1)
{
compare_list <- list(orig_M.cps[[i]], new_M.cps[[i]])
}
else
{
compare_list <- list(orig_M.vot[[i]], new_M.vot[[i]])
}
plot_fixed_effects(compare_list, list(), colstyle_list, pointstyle_list)
plot_rand_effects(compare_list, list(), colstyle_list, pointstyle_list)
}
}
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
#Generate plot for comparison between original
output_dir="~/Documents/Gelman Research/Replication/Subsequent Research/Boxplot Compare/Original v round/Fixed and Random Plot/"
years <- c(2004, 2008)
models <- c("CPS", "Vot")
for (i in 1:length(years))
{
for (j in 1:length(models))
{
year = years[i]
model = models[j]
folder_name = paste(model, year, sep = " ")
output_folder = paste(output_dir, folder_name, sep = "")
setwd(output_folder)
if (j == 1)
{
compare_list <- list(orig_M.cps[[i]], new_M.cps[[i]])
}
else
{
compare_list <- list(orig_M.vot[[i]], new_M.vot[[i]])
}
plot_fixed_effects(compare_list, list(), colstyle_list, pointstyle_list)
plot_rand_effects(compare_list, list(), colstyle_list, pointstyle_list)
}
}
output_dir="~/Documents/Gelman Research/Replication/Subsequent Research/Boxplot Compare/Original v stan/"
setwd(outputDir)
merMod_2004_list <- list(orig_M.cps[[1]], new_M.cps[[1]])
stanlist <- list(cps_rstan)
plot_fixed_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
fixef(orig_M.cps[[1]])
fixef(new_M.cps[[1]])
output_dir="~/Documents/Gelman Research/Replication/Subsequent Research/Boxplot Compare/Original v round/Fixed and Random Plot/"
years <- c(2004, 2008)
models <- c("CPS", "Vot")
for (i in 1:length(years))
{
for (j in 1:length(models))
{
year = years[i]
model = models[j]
folder_name = paste(model, year, sep = " ")
output_folder = paste(output_dir, folder_name, sep = "")
setwd(output_folder)
if (j == 1)
{
compare_list <- list(orig_M.cps[[i]], new_M.cps[[i]])
}
else
{
compare_list <- list(orig_M.vot[[i]], new_M.vot[[i]])
}
plot_fixed_effects(compare_list, list(), colstyle_list, pointstyle_list)
plot_rand_effects(compare_list, list(), colstyle_list, pointstyle_list)
}
}
fixef(new_M.cps[[1]])
fixef(orig_M.cps[[1]])
merMod_fixed_eff_list <- lapply(merMod_2004_list, fixef)
merMod_fixed_eff_list
plot(sort(merMod_fixed_eff_list[[1]]), type = "p", main = "Fixed effects scatter plot", xlab = "", ylab = "Fixed effects", axes = F, pch = point_list[1], col = color_list[1], ylim=c(min_val, max_val))
axis(2)
plot(sort(merMod_fixed_eff_list[[1]]), type = "p", main = "Fixed effects scatter plot", xlab = "", ylab = "Fixed effects", axes = F, pch = point_list[1], col = color_list[1], ylim=c(min_val, max_val))
axis(2)
par(new = "F")
plot(sort(merMod_fixed_eff_list[[1]]), type = "p", main = "Fixed effects scatter plot", xlab = "", ylab = "Fixed effects", axes = F, pch = point_list[1], col = color_list[1], ylim=c(min_val, max_val))
axis(2)
plot(sort(merMod_fixed_eff_list[[1]]))
plot(sort(merMod_fixed_eff_list[[2]]))
plot(sort(merMod_fixed_eff_list[[1]]))
points(sort(merMod_fixed_eff_list[[1]]), pch = "3")
points(sort(merMod_fixed_eff_list[[1]]), pch = 3)
plot_fixed_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
getwd()
setwd(../)
setwd("../")
getwd()
plot_fixed_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
num_merMod <- length(merMod_2004_list)
num_stanfit <- length(stanlist)
#Get the merMod fixed effects and max, min, and length
if (num_merMod > 0)
{
merMod_fixed_eff_list <- lapply(merMod_2004_list, fixef)
merMod_info <- get_eff_info(merMod_fixed_eff_list)
max_merMod <- merMod_info$max
min_merMod <- merMod_info$min
}
num_merMod
merMod_fixed_eff_list
max_merMod
min_merMod
#Get the stanfit fixed effects and max, min, and length
if (num_stanfit > 0)
{
stanfit_fixed_eff_list <- lapply(stanlist, get_fixed_effects_from_stanfit)
stanfit_info <- get_eff_info(stanfit_fixed_eff_list)
max_stanfit <- stanfit_info$max
min_stanfit <- stanfit_info$min
}
stanfit_fixed_eff_list
max_stanfit
min_stanfit
#Get the max and min y to know how to set up plot if both models are present
val_info <- get_min_and_max_y(min_merMod, max_merMod, num_merMod, min_stanfit, max_stanfit, num_stanfit)
min_val <- val_info$min
max_val <- val_info$max
min_val
max_val
plot(sort(merMod_fixed_eff_list[[1]]), type = "p", main = "Fixed effects scatter plot", xlab = "", ylab = "Fixed effects", axes = F, pch = point_list[1], col = color_list[1], ylim=c(min_val, max_val))
axis(2)
plot(sort(merMod_fixed_eff_list[[1]]), type = "p", main = "Fixed effects scatter plot", xlab = "", ylab = "Fixed effects", axes = F, pch = pointstyle_list[1], col = colstyle_list[1], ylim=c(min_val, max_val))
axis(2)
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
plot_fixed_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
plot_fixed_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
output_dir="~/Documents/Gelman Research/Replication/Subsequent Research/Boxplot Compare/Original v stan/"
setwd(outputDir)
merMod_2004_list <- list(orig_M.cps[[1]], new_M.cps[[1]])
stanlist <- list(cps_rstan)
plot_fixed_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
plot_rand_effects(merMod_2004_list, stanlist, colstyle_list, pointstyle_list)
#Generate plot for comparison between original
output_dir="~/Documents/Gelman Research/Replication/Subsequent Research/Boxplot Compare/Original v round/Fixed and Random Plot/"
years <- c(2004, 2008)
models <- c("CPS", "Vot")
for (i in 1:length(years))
{
for (j in 1:length(models))
{
year = years[i]
model = models[j]
folder_name = paste(model, year, sep = " ")
output_folder = paste(output_dir, folder_name, sep = "")
setwd(output_folder)
if (j == 1)
{
compare_list <- list(orig_M.cps[[i]], new_M.cps[[i]])
}
else
{
compare_list <- list(orig_M.vot[[i]], new_M.vot[[i]])
}
plot_fixed_effects(compare_list, list(), colstyle_list, pointstyle_list)
plot_rand_effects(compare_list, list(), colstyle_list, pointstyle_list)
}
}
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
source('~/Documents/Gelman Research/Replication/Subsequent Research/R code/plot_fixed_and_rand_effects.R')
?formula
